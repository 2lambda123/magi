[package]
name = "magi"
license = "MIT"
edition = "2021"
version = "0.1.1"
default-run = "magi"
readme = "./README.md"
authors = ["ncitron", "recell"]
repository = "https://github.com/a16z/magi"
description = "An Optimism full node implementation."
categories = ["network-programming", "asynchronous"]
keywords = ["optimism", "node", "a16z", "libp2p", "engine"]
exclude = [".gitignore", ".github/*", ".env", "infra/*", "magup/*"]

[[bin]]
name = "magi"
path = "./bin/magi.rs"

[[bin]]
name = "peers"
path = "./bin/peers.rs"

[dependencies]
tokio = { version = "1.25.0", features = ["full"] }
async-trait = "0.1.64"
futures = "0.3.26"
eyre = "0.6.8"
ethers-core = "1.0.2"
ethers-providers = "1.0.2"
hex = "0.4.3"
libflate = "1.2.0"
secp256k1 = { version = "0.24", features = ["global-context", "rand-std", "recovery"] }
thiserror = "1.0.39"
url = { version = "2.3.1", features = ["serde"] }

# Logging Telemetry
chrono = "0.4.22"
tracing = "0.1.36"
ansi_term = "0.12.1"
tracing-log = "0.1.3"
tracing-subscriber = { version = "0.3.16", features = ["fmt", "env-filter", "ansi"] }

# Serialization
serde = { version = "1.0.152", features = [ "derive" ] }
serde_json = "1.0.93"

# Backend Crates
sled = "0.34.7"
uuid = { version = "1.3.0", features = ["v4"] }
bytes = "1.4.0"
reqwest = "0.11.14"
jsonwebtoken = "8.2.0"
rand = "0.8.5"
home = "0.5.4"

# CLI
figment = { version = "0.10.8", features = ["toml", "env"] }
ctrlc = "3.2.3"
clap = { version = "4.0", features = ["derive", "env"] }
dirs = "4.0.0"

# Networking
discv5 = { git = "https://github.com/sigp/discv5", optional = true }
enr = { version = "0.7.0", default-features = false, features = ["rust-secp256k1"], optional = true }

[features]
default = [
    "peers"
]
# Place p2p logic behind a feature flag
# to explicitly allow opt-in for networking
peers = [
    "discv5",
    "enr",
]